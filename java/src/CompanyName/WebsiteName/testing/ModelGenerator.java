/*
 * Copyright (c) 2012-2013 of BWC LTD.
 * Your address LAWRENCE :D
 * All rights reserved.
 *
 * This software is the confidential and proprietary information of BWC,
 * LTD. ("Confidential Information").  You shall not
 * disclose such Confidential Information and shall use it only in
 * accordance with the terms of the license agreement you entered into
 * with BWC.
 */

package CompanyName.WebsiteName.testing;

/**
 * 
 * Abstract class for any model generators to extend 
 * 
 * @version 1.0		29.06.2012
 * @author Alexander Botev
 *
 */

public abstract class ModelGenerator {
	/**
	 * The class is to be used together with a suitable SQL database
	 * which when created will have the following tables:
	 * Table City: To contain only the names of all the cities
	 * and an autogenerated primary key.
	 * Table Roads: To contain all the possible pairs of Cities 
	 * between which there is a direct transport together with an
	 * auto generated primary key
	 * Table Journeys: To contain a mapping from a Journey primary key
	 * to all the other fields. Note that the Journey primary key
	 * may not be a candidate key.
	 * 
	 */
	
	/* Each newly created model generator is to have different version */
	protected int version; 
	
	/* The interface used to write to the SQL Database */
	protected DBWriteable model;
	
	/**
	 * The prefix of the tables in the Database to be used.
	 * Note that if a table with the same name exists
	 * it might be DROPed first - implementation dependent.
	 * The actual table names are prefix_City, prefix_Roads
	 * and prefix_Journeys
	 * 
	 */
	protected String tablePrefix;
	
	/**
	 * Any initialization of variables, threads and GUI components
	 * are to be done here. Should always be called after instance 
	 * construction.
	 *
	 */
	public abstract void init();
	
	/**
	 * Generates the actual model and populates the DBWriteable interface.
	 */
	public abstract void generateModel();
	
	/**
	 * If a GUI implementation exists this forces the model
	 * to be displayed on it.
	 */
	public abstract void displayModel();
	
	/**
	 * Store the model information in the SQL Database.
	 */
	public abstract void writeModel();
	
	/**
	 * For any debugging needs the version to be discovered.
	 */
	public int getVersion(){
		return version;
	}
	
}
